/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
/*
JUnit tests frequently use static imports to make the test short and easy to read.
 Static imports are a Java feature that allows fields and methods defined in a class as public
static to be used without specifying the class in which the field is defined.
 */
/*
// alternatively define assertEquals as static import
import static org.junit.jupiter.api.Assertions.assertEquals;
*/


class AppTest {
    //    @Test void appHasAGreeting() {
//        App classUnderTest = new App();
//        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
//    }
    App tester = new App();

    @Test
    public void testLintMethod() {

        //file with errors
        String output = tester.reading("errorFile.js");
        String expected = "Line 2: Missing semicolon.\n" +
                "Line 5: Missing semicolon.\n" +
                "Line 6: Missing semicolon.\n" +
                "Line 24: Missing semicolon.\n";
        assertEquals("must be " + expected, expected, output);

        //file with no errors
        output = tester.reading("File.js");
        expected = "";
        assertEquals("must be no output", expected, output);

        // an empty file
        output = tester.reading("emptyFile.js");
        expected = "";
        assertEquals("must be no output", expected, output);
    }
}

