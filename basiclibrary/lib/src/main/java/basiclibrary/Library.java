/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.*;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

    public static void main(String[] args) {
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        System.out.println(analyzeWeather(weeklyMonthTemperatures));
        List<String> votes = new ArrayList<>();

        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");
        System.out.println(tally(votes));
    }

    public static String analyzeWeather(int[][] arr){
        Set<Integer> uniqueTemperatures = new HashSet<>();
        int high = 0;
        int low = arr[0][0];
        String output = "";
        for(int[] innerArr : arr){
            for(int x : innerArr){
                uniqueTemperatures.add(x);
                if(x > high)
                    high = x;
                if(x < low)
                    low = x;
            }
        }
        output += "High: "+high+"\nLow: "+low;
        for(int i = low; i<=high; i++){
            if(! uniqueTemperatures.contains(i))
                output+="\nNever saw temperature: "+i;

        }
        return output;
    }

    public static String tally(List<String> inputList){
        Map<String,Integer> votes = new HashMap<>();
        for(String item : inputList){
            votes.put(item,votes.getOrDefault(item,0)+1);
        }
        int maxVotes = 0 ;
        String winner="";
        for(String key: votes.keySet()){
            int currentVotes = votes.get(key);
            if(currentVotes > maxVotes){
                maxVotes = currentVotes;
                winner = key;
            }
        }

        return winner;
    }


}